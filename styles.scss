$primary-color: #1c1917;
$secondary-color: #292524;
$primary-text-color: #a8a29e;
$box-shadow-color: rgb(0, 0, 0);

html {
    font-family: cursive;
    box-sizing: border-box;
    height: 100vh;
    width: 100vw;
}

body {
    background-color: $primary-color;
    color: $primary-text-color;
    margin: 0;
    width: 100%;
    height: 100%;
    display: grid;
    place-items: center;
    justify-content: center;
    grid-template-rows: 1fr;
}

.container {
    opacity: 100;
    width: 45vw;
    display: grid;
    place-items: center;
    grid-template-columns: auto;
    grid-template-rows: 220px 220px 220px;
    
    .instructionsContainer {
        grid-row: 1/2;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 15vh;
        h2 {
            transform: scale(130%) translateY(100%);
            overflow: hidden;
            border-right: .35rem solid $primary-text-color;
            margin-top: .25rem solid $primary-color;
            white-space: nowrap;
            margin: 0 auto;
            letter-spacing: .15rem;
            animation-name: typing, blink-caret, move;
            animation-duration: 3000ms, 750ms, 1200ms;
            animation-delay: 0ms, 0ms, 3000ms;
            animation-timing-function: steps(19, end), step-end, ease-out;
            animation-iteration-count: 1, infinite, 1;
        }
        * {
            margin: 0;
        }

        .instructions {
            margin: 0 auto;
            opacity: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        #instructionsAnimate {
            opacity: 100% !important;
            overflow: hidden;
            margin-top: .25rem solid $primary-color;
            white-space: nowrap;
            margin: 0 auto;
            letter-spacing: .15rem;
            animation: typing;
            animation-duration: 1000ms;
            animation-timing-function: steps(20, end);
            animation-iteration-count: 1;
        }
    }

    @keyframes move {
        from {
            transform: scale(130%) translateY(100%);
        }
        to {
            transform: scale(100%) translateY(0%);
        }
    }

    @keyframes typing {
        from { width: 0 }
        to { width: 100% }
      }
    
    @keyframes blink-caret {
        from, to { border-color: transparent }
        50% { border-color: $primary-text-color; }
      }

    .gameContainer {
        grid-row: 2/3;
        width: 100%;
        display: flex;
        justify-content: space-around;
            > button {
            cursor: pointer;
            position: relative;
            overflow: hidden;
            background-color: $secondary-color;
            -webkit-box-shadow: 10px 10px 5px -8px $box-shadow-color;
            -moz-box-shadow: 10px 10px 5px -8px $box-shadow-color;
            box-shadow: 10px 10px 5px -8px $box-shadow-color;
            border-radius: 10px;
            border: none;
            width: 200px;
            height: 200px;
        }
        button:hover {
            transition: 10ms !important;
            transform: scale(101%);
        }
        button:active {
            box-shadow: 10px 10px 5px -10px $box-shadow-color;
            transition: 10ms !important;
            transform: scale(99%);
        }
        }
        .gameContainer img {
            filter: drop-shadow(5px 5px 2px $primary-color);
        }

        .gameContainer > * {
            opacity: 0;
            scale: 20%;
        }

        .menu > * {
            opacity: 0;
            scale: 20%;
        }

        #rock, #paper, #scissors, #player, #reset, #computer {
            transition: 1s ease-in-out;
            scale: 100%;
            opacity: 100%;
        }

    .menu {
        grid-row: 3/4;
        width: 100%;
        margin-top: 2rem;
        display: grid;
        place-items: center;
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 1fr;
            > * {
                width: 200px;
            }

            > div {
                letter-spacing: .15rem;
                display: grid;
                place-items: center;
                h2, p {
                    margin: 0.3rem;
                }
                .playerScore, .computerScore {
                    border-right: .15rem solid $primary-text-color;
                    animation-name: typing, blink-caret;
                    animation-duration: 30ms, 750ms;
                    animation-timing-function: steps(1, end), step-end;
                    animation-iteration-count: 1, infinite;
                }
            }
            .reset {
                cursor: pointer;
                border: none;
                display: flex;
                justify-content: center;
            }
            .reset:hover {
                transform: rotate(3deg) scale(105%);
            }
    }
}
/********************
Play Triangle Animation on hover
********************/
.hover {
    position: absolute;
    opacity: 0;
    animation-name: fadeIn;
    animation-duration: 1200ms;
    animation-delay: 3000ms;
    animation-timing-function: ease-in;
    animation-iteration-count: 1;
    }

    @keyframes fadeIn {
        from {opacity: 0%;}
        to {opacity: 100%;}
    }
    
    .hover > svg {
        cursor: pointer;
    }
    
    #dark1, #light1, #dark2 {
        transition: all 1s ease;
    }
       
    #dark2 {
        transform: translateX(-100%);
    }

    .hover > svg:hover #light1 {
        transform: translateX(20%);
    }
    
    .hover > svg:hover #dark1 {
        transform: translateX(40%);
        opacity: 0;
    }
    
    .hover > svg:hover #dark2 {
        transform: translateX(0%)
    }
/**************
Play Triangle Animation On Click
**************/

#containerAppear {
    transition: 3s;
    scale: 100% !important;
    opacity: 100% !important;
}

.animations {
    position: absolute;
    display: grid;
    place-items: center;
    transform: translateX(25%);
}

.onClickAnimation > * {
    grid-row: 1/2;
    opacity: 0;
}

#onClickAppear > * {
    opacity: 100;
}

#clickLightGroup > * {
    opacity: 100;
    transform: translateX(20%);
    transition: 0.7s;
}

#clickDarkGroup > * {
    opacity: 100;
    transition: 0.9s;
}

#clickDark1 {
    opacity: 0;
}

#lightClicked {
    transform: translateX(50%);
    opacity: 0;
}

#darkClicked {
    transform: translateX(60%);
    opacity: 0;
}

#playClicked {
    transform: translateX(60%);
    opacity: 0;
}